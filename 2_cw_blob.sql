--1
CREATE TABLE MOVIES (
ID NUMBER(12) PRIMARY KEY,
TITLE VARCHAR2(400) NOT NULL,
CATEGORY VARCHAR2(50),
YEAR CHAR(4),
CAST VARCHAR2(4000),
DIRECTOR VARCHAR2(4000),
STORY VARCHAR2(4000),
PRICE NUMBER(5,2),
COVER BLOB,
MIME_TYPE VARCHAR2(50)
);

--2
INSERT INTO MOVIES (ID, TITLE, CATEGORY, YEAR, CAST, DIRECTOR, STORY, PRICE, COVER, MIME_TYPE)
SELECT ID, TITLE, CATEGORY, TRIM(YEAR), CAST, DIRECTOR, STORY, PRICE, IMAGE AS COVER, MIME_TYPE
FROM DESCRIPTIONS LEFT OUTER JOIN COVERS on ID = MOVIE_ID;

--3
SELECT ID, TITLE FROM MOVIES WHERE COVER IS NULL;

--4
SELECT ID, TITLE, LENGTH(COVER) AS FILESIZE
FROM MOVIES 
WHERE COVER IS NOT NULL;

--5
SELECT ID, TITLE, LENGTH(COVER) AS FILESIZE
FROM MOVIES 
WHERE COVER IS NULL;

--6
select * from ALL_DIRECTORIES;

--7  
UPDATE MOVIES
SET cover = EMPTY_BLOB(), MIME_TYPE ='image/jpeg'
WHERE ID=66;
COMMIT;

--8
SELECT ID, TITLE, LENGTH(COVER) AS FILESIZE
FROM MOVIES 
WHERE ID IN (65, 66);

--9
DECLARE
    lobd blob;
    fils BFILE := BFILENAME('ZSBD_DIR','escape.jpg');
BEGIN
    SELECT COVER INTO lobd
    FROM MOVIES
    where id=66
    FOR UPDATE;
    
    DBMS_LOB.fileopen(fils, DBMS_LOB.file_readonly);
    DBMS_LOB.LOADFROMFILE(lobd,fils,DBMS_LOB.GETLENGTH(fils));
    DBMS_LOB.FILECLOSE(fils);
    COMMIT;
END;

--10
CREATE TABLE TEMP_COVERS(
    movie_id NUMBER(12),
    image BFILE,
    mime_type VARCHAR2(50)
);

--11

INSERT INTO TEMP_COVERS
VALUES(65, BFILENAME('ZSBD_DIR','eagles.jpg'),'image/jpeg');
--12
SELECT MOVIE_ID, DBMS_LOB.GETLENGTH(image) AS FILESIZE
FROM TEMP_COVERS 
WHERE MOVIE_ID=65;

--13
DECLARE
    m_type VARCHAR2(50);
    img BFILE;
    a blob;
BEGIN
    select mime_type into m_type FROM TEMP_COVERS WHERE MOVIE_ID=65;
    select image into img FROM TEMP_COVERS WHERE MOVIE_ID=65;
    dbms_lob.createtemporary(a, TRUE);
    DBMS_LOB.fileopen(img);
    DBMS_LOB.LOADFROMFILE(a,img,DBMS_LOB.GETLENGTH(img));
    DBMS_LOB.FILECLOSE(img);
    UPDATE MOVIES
    SET cover = a, MIME_TYPE = m_type
    WHERE ID=65;
    dbms_lob.freetemporary(a);
    COMMIT;    
END;

--14
select id, dbms_lob.getlength(cover) as filesize from movies where id in (65, 66)

--15
DROP TABLE MOVIES;
DROP TABLE TEMP_COVERS;
